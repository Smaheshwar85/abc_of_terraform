Below is an end-to-end production-ready Terraform module to create a Google Cloud Logging Sink with a destination in Pub/Sub. This module includes flexibility for different configurations, such as setting IAM roles, applying inclusion and exclusion filters, and handling Pub/Sub as the destination.

Module Structure
variables.tf: Defines input variables for the module.
locals.tf: Manages local variables and default settings.
main.tf: Contains the main resources (logging sink, IAM roles, exclusions).
outputs.tf: Outputs essential information.
README.md: Documentation for how to use the module (optional but recommended for production).
1. variables.tf
This file defines the input variables required for the module.

hcl
Copy code
variable "prefix" {
  description = "Prefix to be used for naming resources"
  type        = string
}

variable "destination" {
  description = "The destination for the logs (e.g., Pub/Sub topic)"
  type        = string
}

variable "log_filter" {
  description = "Optional filter expression for the sink (inclusion filter)"
  type        = string
  default     = ""  # Default to an empty string (no filter)
}

variable "exclusion_filters" {
  description = "List of log exclusion filters to be applied to the sink"
  type = list(object({
    name        = string
    filter      = string
    description = string
  }))
  default = []  # Default to an empty list (no exclusions)
}

variable "project_id" {
  description = "The ID of the project in which to create the log sink"
  type        = string
}

variable "region" {
  description = "Region where the resources are deployed"
  type        = string
}

variable "iam_role" {
  description = "The IAM role to be granted to the sink service account (e.g., roles/pubsub.publisher)"
  type        = string
  default     = "roles/pubsub.publisher"  # Default role for Pub/Sub
}
2. locals.tf
This file defines local variables, including the default log filter and naming conventions.

hcl
Copy code
locals {
  # Default naming convention
  log_sink_name = "${var.prefix}-log-sink"

  # Determine the log sink filter; if not provided, default is set
  log_sink_filter = var.log_filter != "" ? var.log_filter : "resource.type = \"gce_instance\""
}
3. main.tf
This file defines the core resources, including the logging sink, IAM role binding, and optional log exclusions.

hcl
Copy code
resource "google_logging_project_sink" "log_sink" {
  name        = local.log_sink_name
  destination = var.destination
  filter      = local.log_sink_filter
  project     = var.project_id

  include_children      = false
  unique_writer_identity = true
}

resource "google_project_iam_member" "sink_writer" {
  project = var.project_id
  role    = var.iam_role
  member  = google_logging_project_sink.log_sink.writer_identity
}

resource "google_logging_project_exclusion" "log_exclusions" {
  count = length(var.exclusion_filters)

  name        = var.exclusion_filters[count.index].name
  description = var.exclusion_filters[count.index].description
  filter      = var.exclusion_filters[count.index].filter
  project     = var.project_id
}
4. outputs.tf
This file defines outputs that will provide essential information for the users of the module.

hcl
Copy code
output "log_sink_name" {
  description = "The name of the logging sink created"
  value       = google_logging_project_sink.log_sink.name
}

output "log_sink_destination" {
  description = "The destination to which the log entries are being exported"
  value       = google_logging_project_sink.log_sink.destination
}

output "sink_writer_identity" {
  description = "The service account identity that is used to write to the destination"
  value       = google_logging_project_sink.log_sink.writer_identity
}
5. README.md (Optional but Recommended)
Include a README.md file to document how to use the module. This file should provide details on the module's purpose, input variables, outputs, and examples.

markdown
Copy code
# Google Cloud Logging Sink Module

## Description
This module creates a Google Cloud Logging Sink that exports logs to a Pub/Sub topic. It also handles the necessary IAM permissions and allows for optional inclusion and exclusion filters.

## Inputs
- `prefix`: Prefix to be used for naming resources.
- `destination`: The destination for the logs (e.g., Pub/Sub topic).
- `log_filter`: Optional filter expression for the sink (inclusion filter).
- `exclusion_filters`: List of log exclusion filters.
- `project_id`: The ID of the project where the sink is created.
- `region`: The region where the resources are deployed.
- `iam_role`: IAM role to be assigned to the sink service account (default: `roles/pubsub.publisher`).

## Outputs
- `log_sink_name`: The name of the logging sink.
- `log_sink_destination`: The destination for the logs.
- `sink_writer_identity`: The service account identity used to write to the destination.

## Example Usage

```hcl
module "logging_sink" {
  source      = "./path/to/your/logging-sink-module"
  prefix      = "my-app"
  destination = "pubsub.googleapis.com/projects/my-gcp-project/topics/my-topic"
  project_id  = "my-gcp-project"
  region      = "us-central1"

  # Optional: Define log filters if needed
  log_filter = "resource.type = \"gce_instance\" AND severity >= ERROR"

  # Optional: Define exclusion filters if needed
  exclusion_filters = [
    {
      name        = "exclude-debug-logs"
      filter      = "severity = DEBUG"
      description = "Exclude all DEBUG severity logs"
    }
  ]
}
vbnet
Copy code

### Best Practices for Production

1. **Input Validation**: Consider adding `validation` blocks to the variables to enforce correct input formats and values.

2. **Error Handling**: Ensure proper error handling in Terraform by setting sensible defaults and using conditionals where needed.

3. **Documentation**: Keep the `README.md` updated with usage examples and details on how to configure and run the module.

4. **Version Control**: Tag releases in your version control system (e.g., GitHub) so that users can pin specific versions of your module.

5. **Security Considerations**: Ensure that the IAM roles and permissions are scoped correctly to avoid over-privileged access. Use least privilege principles.

### Conclusion

This module provides a robust, flexible, and production-ready way to create a Google Cloud Logging Sink that exports logs to a Pub/Sub topic. It handles IAM roles, inclusion/exclusion filters, and outputs critical information for downstream use.

2/2






